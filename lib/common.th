#ifndef COMMON_TAS_
#define COMMON_TAS_

#define rel(Label)          p + (@Label - .)
#define reloff(Label,Off)   p + (@Label - . + (Off))
#define goto(Label)         p <- rel(Label)
#define call(Target)        [o] <- p + 3 ; o <- o - 1 ; goto(Target)
#define jnzrel(Cond,Label)  n <- (@Label - (. + 3)) ; n <- Cond & n ; p <- p + n + 1
#define jzrel(Cond,Label)   Cond <- Cond == 0 ; jnzrel(Cond,Label)
#define push(Reg)           Reg -> [o] ; o <- o - 1
#define pop(Reg)            o <- o + 1 ; Reg <- [o]
#define ret                 pop(p)
#define prologue            o <- -1
#define inv(Reg)            Reg ^~ a

#endif

