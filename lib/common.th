#ifndef COMMON_TAS_
#define COMMON_TAS_

// The stack-setup prologue assumes o points just above a usable stack space.
// For bare-metal applications, this will be address zero if o has not been
// written, so the stack will start at -1 (0xffffffff).
#define prologue            o <- o - 1

#define rel(Label)          p + (@Label - .)
#define reloff(Label,Off)   p + (@Label - . + (Off))
#define goto(Label)         p <- rel(Label)
#define call(Target)        [o] <- p + 3 ; o <- o - 1 ; goto(Target)
// XXX jnzrel requires Cond to be either 0 or -1, so it's not properly "nz"
// jnzrel() and jzrel() trash the condition register. Use jnzrel_() and
// jzrel_() if this behaviour is not desired
#define jnzrel(Cond,Label)  jnzrel_(Cond,Cond,Label)
#define jzrel(Cond,Label)   jzrel_(Cond,Cond,Label)
#define jnzrel_(Q,T,W)      T <- Q &  (@W - (. + 2)); p <- p + T + 1
#define jzrel_(Q,T,W)       T <- Q &~ (@W - (. + 2)); p <- p + T + 1
#define push(Reg)           Reg -> [o] ; o <- o - 1
#define pop(Reg)            o <- o + 1 ; Reg <- [o]
#define ret                 pop(p)

#endif

