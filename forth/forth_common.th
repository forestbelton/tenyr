#ifndef FORTH_COMMON_TH_
#define FORTH_COMMON_TH_

// Baby ITC Forth
// Forth's  W   is in M
//          X   is in K
//          IP  is in I
//          PSP is in D
//          RSP is in J
// relocation offset is in F

#define W   M
#define X   K
#define IP  I
#define PSP D
#define RSP J

#define jmp(Reg)    p <- Reg + f
#define ccall(Loc)  o <- RSP - 1 ; call(Loc)

#define iprel(Label)        p + @Label - .
#define goto(Label)         p <- iprel(Label)
#define call(Target)        push(RSP,p + 3) ; goto(Target)
#define jnzrel(Cond,Label)  n <- @Label - . - 3 ; n <- n & Cond ; p <- p + n + 1
#define push(Sp,Expr)       [Sp] <- Expr ; Sp <- Sp - 1
#define pop(Sp,Reg)         Sp <- Sp + 1 ; Reg <- [Sp]
#define ret                 pop(RSP,p)

#define head(Label,Name) \
    .word .L##Label##_end - .L##Label##_start \
.L##Label##_start: \
    .ascii #Name \
.L##Label##_end: \
Label:

#endif

