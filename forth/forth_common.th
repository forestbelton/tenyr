#ifndef FORTH_COMMON_TH_
#define FORTH_COMMON_TH_

// Baby ITC Forth
// Forth's  W   is in M
//          X   is in K
//          IP  is in I
//          PSP is in D
//          RSP is in J
// relocation offset is in F

#define W   M
#define X   K
#define IP  I
#define PSP D
#define RSP J

#define pushregs    push(o,W)   ; push(o,X)   ; push(o,IP) ; push(o,PSP) ; push(o,RSP)
#define  popregs     pop(o,RSP) ;  pop(o,PSP) ;  pop(o,IP) ;  pop(o,X)   ;  pop(o, W)

#define jmp(Reg)    p <- Reg + f
#define ccall(Loc)  o <- RSP - 1 ; pushregs ; push(o,p + 3); goto(Loc) ; popregs

#define iprel(Label)        f + @Label
#define goto(Label)         p <- iprel(Label)
#define push(Sp,Expr)       [Sp] <- Expr ; Sp <- Sp - 1
#define pop(Sp,Reg)         Sp <- Sp + 1 ; Reg <- [Sp]

#define head(Label,Name) \
    .word .L##Label##_end - .L##Label##_start \
.L##Label##_start: \
    .ascii #Name \
    .global Label \
.L##Label##_end: \
Label

#endif

